{"ast":null,"code":"var _jsxFileName = \"/Users/neeleshrambally/Documents/Development/gamesGlobal/HelloWorld/frontEnd/materialUi-in-react/src/components/Modals/NewUserModal/NewUserModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport BasicModal from '../../common/BasicModal/BasicModal';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultInputValues = {\n  userId: '',\n  email: '',\n  phoneNumber: ''\n};\n\nconst NewUserModal = _ref => {\n  _s();\n\n  let {\n    open,\n    onClose,\n    addNewUser\n  } = _ref;\n  const [values, setValues] = useState(defaultInputValues);\n  const modalStyles = {\n    inputFields: {\n      display: 'flex',\n      flexDirection: 'column',\n      marginTop: '20px',\n      marginBottom: '15px',\n      '.MuiFormControl-root': {\n        marginBottom: '20px'\n      }\n    }\n  };\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n  const validationSchema = Yup.object().shape({\n    userId: Yup.string().required('User ID is required').min(6, 'User ID must be at least 6 characters'),\n    email: Yup.string().required('Email is required').email('Email is invalid.'),\n    phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number is not valid')\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const addUser = data => {\n    addNewUser(data);\n  };\n\n  const handleChange = value => {\n    setValues(value);\n  };\n\n  useEffect(() => {\n    if (open) setValues(defaultInputValues);\n  }, [open]);\n\n  const getContent = () => {\n    var _errors$userId, _errors$email, _errors$phoneNumber;\n\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: modalStyles.inputFields,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"User ID\",\n        name: \"userId\",\n        label: \"User ID\",\n        required: true,\n        ...register('userId'),\n        error: errors.userId ? true : false,\n        helperText: (_errors$userId = errors.userId) === null || _errors$userId === void 0 ? void 0 : _errors$userId.message,\n        value: values.userId,\n        onChange: event => handleChange({ ...values,\n          userId: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Email\",\n        name: \"email\",\n        label: \"Email\",\n        required: true,\n        ...register('email'),\n        error: errors.email ? true : false,\n        helperText: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n        value: values.email,\n        onChange: event => handleChange({ ...values,\n          email: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Phone number\",\n        name: \"phoneNumber\",\n        label: \"Phone number\",\n        required: true,\n        ...register('phoneNumber'),\n        error: errors.phoneNumber ? true : false,\n        helperText: (_errors$phoneNumber = errors.phoneNumber) === null || _errors$phoneNumber === void 0 ? void 0 : _errors$phoneNumber.message,\n        value: values.phoneNumber,\n        onChange: event => handleChange({ ...values,\n          phoneNumber: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BasicModal, {\n    open: open,\n    onClose: onClose,\n    title: \"New user\",\n    subTitle: \"Fill out inputs and hit 'submit' button.\",\n    content: getContent(),\n    onSubmit: handleSubmit(addUser)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewUserModal, \"qijSNyY2cUr1L9MD3JXAxKbG1k8=\", false, function () {\n  return [useForm];\n});\n\n_c = NewUserModal;\nexport default NewUserModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUserModal\");","map":{"version":3,"sources":["/Users/neeleshrambally/Documents/Development/gamesGlobal/HelloWorld/frontEnd/materialUi-in-react/src/components/Modals/NewUserModal/NewUserModal.js"],"names":["React","useState","useEffect","BasicModal","Box","TextField","useForm","yupResolver","Yup","defaultInputValues","userId","email","phoneNumber","NewUserModal","open","onClose","addNewUser","values","setValues","modalStyles","inputFields","display","flexDirection","marginTop","marginBottom","phoneRegExp","validationSchema","object","shape","string","required","min","matches","register","handleSubmit","formState","errors","resolver","addUser","data","handleChange","value","getContent","message","event","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport BasicModal from '../../common/BasicModal/BasicModal'\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup'\n\nconst defaultInputValues = {\n    userId: '',\n    email: '',\n    phoneNumber: ''\n};\n\nconst NewUserModal = ({ open, onClose, addNewUser }) => {\n    const [values, setValues] = useState(defaultInputValues);\n\n    const modalStyles = {\n        inputFields: {\n            display: 'flex',\n            flexDirection: 'column',\n            marginTop: '20px',\n            marginBottom: '15px',\n            '.MuiFormControl-root': {\n                marginBottom: '20px',\n            },\n        },\n    };\n\n    const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\n    const validationSchema = Yup.object().shape({\n        userId: Yup.string()\n            .required('User ID is required')\n            .min(6, 'User ID must be at least 6 characters'),\n        email: Yup.string()\n            .required('Email is required')\n            .email('Email is invalid.'),\n        phoneNumber: Yup.string()\n            .matches(phoneRegExp, 'Phone number is not valid'),\n    });\n\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(validationSchema)\n    });\n\n    const addUser = (data) => {\n        addNewUser(data);\n    };\n\n    const handleChange = (value) => {\n        setValues(value)\n    };\n\n    useEffect(() => {\n        if (open) setValues(defaultInputValues);\n    }, [open])\n\n    const getContent = () => (\n        <Box sx={modalStyles.inputFields}>\n            <TextField\n                placeholder=\"User ID\"\n                name=\"userId\"\n                label=\"User ID\"\n                required\n                {...register('userId')}\n                error={errors.userId ? true : false}\n                helperText={errors.userId?.message}\n                value={values.userId}\n                onChange={(event) => handleChange({ ...values, userId: event.target.value })}\n            />\n            <TextField\n                placeholder=\"Email\"\n                name=\"email\"\n                label=\"Email\"\n                required\n                {...register('email')}\n                error={errors.email ? true : false}\n                helperText={errors.email?.message}\n                value={values.email}\n                onChange={(event) => handleChange({ ...values, email: event.target.value })}\n            />\n            <TextField\n                placeholder=\"Phone number\"\n                name=\"phoneNumber\"\n                label=\"Phone number\"\n                required\n                {...register('phoneNumber')}\n                error={errors.phoneNumber ? true : false}\n                helperText={errors.phoneNumber?.message}\n                value={values.phoneNumber}\n                onChange={(event) => handleChange({ ...values, phoneNumber: event.target.value })}\n            />\n        </Box>\n    );\n    \n    return (\n        <BasicModal\n            open={open}\n            onClose={onClose}\n            title=\"New user\"\n            subTitle=\"Fill out inputs and hit 'submit' button.\"\n            content={getContent()}\n            onSubmit={handleSubmit(addUser)}\n        />\n            \n    )\n}\n\nexport default NewUserModal\n"]},"metadata":{},"sourceType":"module"}